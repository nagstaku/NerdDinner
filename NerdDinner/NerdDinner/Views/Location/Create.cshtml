@model NerdDinner.Models.Location

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<div class="row">
    <div class="col-md-8"><div id="map-canvas" style="height: 450px; max-width: none;"></div></div>
    <div class="col-md-4">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Location</h4>
                <hr />
                @Html.ValidationSummary(true)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name)
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address1, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address1)
                        @Html.ValidationMessageFor(model => model.Address1)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address2, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address2)
                        @Html.ValidationMessageFor(model => model.Address2)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City)
                        @Html.ValidationMessageFor(model => model.City)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Zip)
                    <div>
                        @Html.EditorFor(model => model.Zip)
                        @Html.ValidationMessageFor(model => model.Zip)
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, new { @class = "control-label" })
                    <div class="">
                        @Html.EditorFor(model => model.Phone, new { @class = "max-width: none" })
                        @Html.ValidationMessageFor(model => model.Phone)
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
        </div>
        }
        </div>
    </div>
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
        @section Scripts {
            <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
            <script>
                var map;
                var geocoder;
                function initialize() {
                    geocoder = new google.maps.Geocoder();
                    var mapOptions = {
                        center: new google.maps.LatLng(46.523, -122.676),
                        zoom: 8
                    };
                    map = new google.maps.Map(document.getElementById("map-canvas"),
                        mapOptions);
                }

                google.maps.event.addDomListener(window, 'load', initialize);

                function codeAddress() {
                    var address = document.getElementById('City').value + ', OR';
                    geocoder.geocode({ 'address': address }, function (results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {
                            map.setCenter(results[0].geometry.location);
                        } else {
                            alert("City and State not recognized. Error:" + status);
                        }
                    })
                }

                $(function () {
                    $('#City').blur(function () {
                        codeAddress();
                    })
                })
            </script>
            @Scripts.Render("~/bundles/jqueryval")
        }
